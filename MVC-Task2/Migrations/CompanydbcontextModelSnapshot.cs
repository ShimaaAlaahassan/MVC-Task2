// <auto-generated />
using System;
using MVC_Task2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCTask2.Migrations
{
    [DbContext(typeof(Companydbcontext))]
    partial class CompanydbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Task2.Models.Department", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dependant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("EmpSSN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("EmpSSN");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Minit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("salary")
                        .HasColumnType("money");

                    b.Property<string>("sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("supervisorSSN")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("supervisorSSN");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.Property<int>("ProNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProNumber"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("departmentLocationDeptNumber")
                        .HasColumnType("int");

                    b.Property<string>("departmentLocationlocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("deptNum")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProNumber");

                    b.HasIndex("deptNum");

                    b.HasIndex("departmentLocationDeptNumber", "departmentLocationlocation");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MVC_Task2.Models.WorksOn", b =>
                {
                    b.Property<int>("EmpSSN")
                        .HasColumnType("int");

                    b.Property<int>("projNum")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesSSN")
                        .HasColumnType("int");

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpSSN", "projNum");

                    b.HasIndex("EmployeesSSN");

                    b.HasIndex("projNum");

                    b.ToTable("worksOns");
                });

            modelBuilder.Entity("MVC_Task2.Models.departmentLocation", b =>
                {
                    b.Property<int>("DeptNumber")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("departmentLocationDeptNumber")
                        .HasColumnType("int");

                    b.Property<string>("departmentLocationlocation")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DeptNumber", "location");

                    b.HasIndex("departmentLocationDeptNumber", "departmentLocationlocation");

                    b.ToTable("departmentLocations");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dependant", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "Employee")
                        .WithMany("Dependants")
                        .HasForeignKey("EmpSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "supervisor")
                        .WithMany("Employees")
                        .HasForeignKey("supervisorSSN");

                    b.Navigation("supervisor");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.HasOne("MVC_Task2.Models.Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("deptNum");

                    b.HasOne("MVC_Task2.Models.departmentLocation", null)
                        .WithMany("Projects")
                        .HasForeignKey("departmentLocationDeptNumber", "departmentLocationlocation");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Task2.Models.WorksOn", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "Employees")
                        .WithMany("WorksOn")
                        .HasForeignKey("EmployeesSSN");

                    b.HasOne("MVC_Task2.Models.Project", "Project")
                        .WithMany("WorksOns")
                        .HasForeignKey("projNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MVC_Task2.Models.departmentLocation", b =>
                {
                    b.HasOne("MVC_Task2.Models.Department", "Department")
                        .WithMany("DepartmentLocations")
                        .HasForeignKey("DeptNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Task2.Models.departmentLocation", null)
                        .WithMany("departmentLocations")
                        .HasForeignKey("departmentLocationDeptNumber", "departmentLocationlocation");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Task2.Models.Department", b =>
                {
                    b.Navigation("DepartmentLocations");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.Navigation("Dependants");

                    b.Navigation("Employees");

                    b.Navigation("WorksOn");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.Navigation("WorksOns");
                });

            modelBuilder.Entity("MVC_Task2.Models.departmentLocation", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("departmentLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
